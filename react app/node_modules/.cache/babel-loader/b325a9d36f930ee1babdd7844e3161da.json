{"ast":null,"code":"var _jsxFileName = \"/home/jared/django-react-tic-tac-toe/frontend/src/components/scoreboard.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nexport class Scoreboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshList = () => {\n      axios.get('http://localhost:8000/api/historys').then(response => {\n        Promise.all(response.data.map(historyItem => {\n          return historyItem.title;\n        })).then(historyData => {\n          this.setState({\n            scoreboard: historyData\n          });\n        });\n      }).catch(error => console.error(error));\n    };\n\n    this.handleInputChange = event => {\n      event.preventDefault();\n      let stateKey = event.target.dataset.name;\n      let stateValue = event.target.value;\n      this.setState({\n        [stateKey]: stateValue\n      });\n      this.props.nameChangeHandler(stateKey, stateValue);\n    };\n\n    this.handleNameValidation = event => {\n      if (this.state.playerOneName.length !== 0 && this.state.playerTwoName.length !== 0) {\n        return;\n      } else {\n        event.preventDefault();\n      }\n    };\n\n    this.state = {\n      playerOneName: this.props.state.playerOneName,\n      playerTwoName: this.props.state.playerTwoName,\n      scoreboard: []\n    };\n  }\n\n  async componentDidMount() {\n    this.refreshList();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"view view--scoreboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"scoreboard__title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, \"Welcome\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"scoreboard__subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Would you like to play a game?\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scoreboard__names\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scoreboard__name-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"playerOneName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"Player one name (x):\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"playerOneName\",\n      className: \"scoreboard__input\",\n      type: \"text\",\n      value: this.state.playerOneName,\n      onChange: this.handleInputChange,\n      \"data-name\": \"playerOneName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"scoreboard__name-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"playerTwoName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, \"Player two name (o):\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"playerTwoName\",\n      className: \"scoreboard__input\",\n      type: \"text\",\n      value: this.state.playerTwoName,\n      onChange: this.handleInputChange,\n      \"data-name\": \"playerTwoName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Link, {\n      to: \"/board\",\n      onClick: this.handleNameValidation,\n      className: \"scoreboard__btn btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Start new game\"), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"scoreboard__subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Recent games:\"), this.state.scoreboard.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 48\n      }\n    }, \"There are no previous games to show.\"), this.state.scoreboard.length !== 0 && /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"scoreboard__list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 48\n      }\n    }, this.state.scoreboard.map((leader, key) => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 20\n        }\n      }, \"- \", leader);\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/jared/django-react-tic-tac-toe/frontend/src/components/scoreboard.jsx"],"names":["React","Link","axios","Scoreboard","Component","constructor","props","refreshList","get","then","response","Promise","all","data","map","historyItem","title","historyData","setState","scoreboard","catch","error","console","handleInputChange","event","preventDefault","stateKey","target","dataset","name","stateValue","value","nameChangeHandler","handleNameValidation","state","playerOneName","length","playerTwoName","componentDidMount","render","leader","key"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\n\nexport class Scoreboard extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n\t\t\tplayerOneName: this.props.state.playerOneName,\n\t\t\tplayerTwoName: this.props.state.playerTwoName,\n      scoreboard: []\n    }\n  }\n\n  async componentDidMount() {\n    this.refreshList()\n  }\n\n  refreshList = () => {\n    axios.get('http://localhost:8000/api/historys')\n      .then(response => {\n        Promise.all(response.data.map((historyItem) => {\n          return historyItem.title\n        })).then((historyData) => {this.setState({scoreboard: historyData})})\n      })\n      .catch(error => console.error(error))\n  }\n\n  handleInputChange = (event) => {\n    event.preventDefault()\n\n    let stateKey = event.target.dataset.name\n    let stateValue = event.target.value\n\n    this.setState({\n      [stateKey]: stateValue\n    })\n\n    this.props.nameChangeHandler(stateKey, stateValue)\n  }\n\n  handleNameValidation = (event) => {\n    if (this.state.playerOneName.length !== 0 && this.state.playerTwoName.length !== 0) {\n      return\n    } else {\n      event.preventDefault()\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"view view--scoreboard\">\n        <h1 className=\"scoreboard__title\">Welcome</h1>\n\n        <h2 className=\"scoreboard__subtitle\">Would you like to play a game?</h2>\n\n        <div className=\"scoreboard__names\">\n          <div className=\"scoreboard__name-box\">\n            <label htmlFor=\"playerOneName\">Player one name (x):</label>\n\n            <input id=\"playerOneName\" className=\"scoreboard__input\" type=\"text\" value={this.state.playerOneName} onChange={this.handleInputChange} data-name=\"playerOneName\" />\n          </div>\n\n          <div className=\"scoreboard__name-box\">\n            <label htmlFor=\"playerTwoName\">Player two name (o):</label>\n\n            <input id=\"playerTwoName\" className=\"scoreboard__input\" type=\"text\" value={this.state.playerTwoName} onChange={this.handleInputChange} data-name=\"playerTwoName\" />\n          </div>\n        </div>\n\n        <Link to=\"/board\" onClick={this.handleNameValidation} className=\"scoreboard__btn btn\">Start new game</Link>\n\n        <h2 className=\"scoreboard__subtitle\">Recent games:</h2>\n\n        {this.state.scoreboard.length === 0 && <p>There are no previous games to show.</p>}\n\n        {this.state.scoreboard.length !== 0 && <ul className=\"scoreboard__list\">\n          {this.state.scoreboard.map((leader, key) => {\n            return <li key={key}>- {leader}</li>\n          })}\n        </ul>}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}